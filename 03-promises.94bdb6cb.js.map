{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,SACnCC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBACzBD,SAASC,cAAc,wBAIzCF,EAAUM,iBAAiB,UAAU,SAAAC,GACnCA,EAAIC,iBAKJ,IAJA,IAAIC,EAAQC,OAAOP,EAAWQ,OAC1BC,EAAOF,OAAON,EAAUO,OACxBE,EAASH,OAAOL,EAAYM,OAEvBG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAChCC,EAAc,CAAEC,SAAUF,EAAGL,MAAOA,IACjCQ,MAAK,SAAAC,G,OAAUC,EAAArB,GAASsB,OAAOC,QAAQH,E,IACvCI,OAAM,SAAAC,G,OAASJ,EAAArB,GAASsB,OAAOI,QAAQD,E,IAC1Cd,GAASG,C,IAIb,IAAMG,EAAgB,SAAAU,G,IAAGT,EAAQS,EAART,SAAUP,EAAKgB,EAALhB,MACjC,OAAO,IAAIiB,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,uBAAwCM,OAAfjB,EAAS,QAAYiB,OAANxB,EAAM,OAGtDmB,EAAO,sBAAqCK,OAAfjB,EAAS,QAAYiB,OAANxB,EAAM,M,GAEnDA,E","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst formInput = document.querySelector('.form');\nconst delayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst submitBtn = document.querySelector(\"button[type='submit'\");\n\n// amountInput.classList.add(\"amount-promises\");\n// submitBtn.addEventListener('submit',createPromise);\nformInput.addEventListener('submit', evt => {\n  evt.preventDefault();\n  let delay = Number(delayInput.value);\n  let step = Number(stepInput.value);\n  let amount = Number(amountInput.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise({ position: i, delay: delay })\n      .then(result => Notiflix.Notify.success(result))\n      .catch(error => Notiflix.Notify.failure(error));\n    delay += step;\n  }\n});\n\nconst createPromise = ({ position, delay }) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n};"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formInput","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","addEventListener","evt","preventDefault","delay","Number","value","step","amount","i","$ce04d3a99e08e73b$var$createPromise","position","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","param","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat"],"version":3,"file":"03-promises.94bdb6cb.js.map"}